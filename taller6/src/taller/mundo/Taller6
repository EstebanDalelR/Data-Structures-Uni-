import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;
 
public class ABB<Llave, Valor>
{
	InputStream inputStream;
	private Nodo raiz;
 
	public String getPropValues() throws IOException 
	{
 
		try 
		{
			Properties prop = new Properties();
			String propFileName = "/data/ejemplo.properties";
 
			inputStream = getClass().getClassLoader().getResourceAsStream(propFileName);
 
			if (inputStream != null) {
				prop.load(inputStream);
			} else {
				throw new FileNotFoundException("property file '" + propFileName + "' no se encuentra");
			}
 
 			String inorden = prop.getProperty("inorden");
			String preorden = prop.getProperty("preorden");
		}
		catch (Exception e) 
		{
			System.out.println("Exception: " + e);
		}
		finally
		{
			inputStream.close();
		}
		return result;
	}

	public class Nodo
	{
		private Llave llave;
		private Valor valor;
		private Nodo siguiente;
		
		public Nodo(Llave llaveN, Valor valorN, Nodo siguienteN)
		{
			this.llave =llaveN;
			this.valor=valorN;
			this.siguiente=siguienteN;
		}
	}
	//Constructor
	public ABB()
	{

	}

	public int darTamano()
	{
		return darTamano(raiz);
	}

	public boolean estaVacio()
	{
		return darTamano(raiz)==0;
	}

	public boolean contieneLlave(Llave llaveN)
	{
		return darValor(llaveN)!=null;
	}

	public Valor darValor(Nodo nodoN, Llave llaveN)
	{
		if(nodoN==null)
		{
			return null;
		}
		int comparar = Llave.compareTo(nodoN.Llave);
		if(comparar<0)
		{
			return darValor(nodoN.)
		}
	}
}